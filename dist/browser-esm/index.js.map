{
  "version": 3,
  "sources": ["../../node_modules/eventemitter3/index.js", "../../node_modules/eventemitter3/index.mjs", "../../node_modules/uuid/dist/esm-browser/rng.js", "../../node_modules/uuid/dist/esm-browser/regex.js", "../../node_modules/uuid/dist/esm-browser/validate.js", "../../node_modules/uuid/dist/esm-browser/stringify.js", "../../node_modules/uuid/dist/esm-browser/v4.js", "../../src/logging/LogStrategy.ts", "../../src/browser/BrowserConsoleStrategy.ts", "../../src/browser/WebSocketManager.ts", "../../src/browser/RequestManager.ts", "../../src/browser/CommunicationsManager.ts"],
  "sourcesContent": ["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "import EventEmitter from './index.js'\n\nexport { EventEmitter }\nexport default EventEmitter\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;", "import { IRequest, IRequestHeader } from \"../interfaces\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n}\n\n/**\n * Type representing the payload type of a log message.\n */\nexport type PayloadType = \"text\" | \"json\";\n\n/**\n * Interface representing the payload of a log message.\n */\nexport interface LogPayload {\n  /** The type of the payload. */\n  type: PayloadType;\n  /** The content of the payload. */\n  content: string | object;\n}\n\n/**\n * Interface representing a log message.\n */\nexport interface LogMessage {\n  sender?: string;\n  /** The timestamp of the log message. */\n  timestamp: string;\n  /** The log level of the message. */\n  level: string;\n  /** The content of the log message. */\n  message: string;\n  /** Optional payload for additional information. */\n  payload?: LogPayload;\n}\n\nexport abstract class LogStrategy {\n  protected MAX_STRING_LENGTH?: number;\n  protected MAX_DEPTH?: number;\n  protected abstract sendPackaged(\n    packagedMessage: IRequest<any>,\n    options?: Record<string, any>\n  ): Promise<void>;\n\n  constructor() {}\n\n  async send(message: any, options?: Record<string, any>): Promise<void> {\n    const truncatedMessage = LogStrategy.truncateAndStringify(\n      message,\n      0,\n      this.MAX_STRING_LENGTH,\n      this.MAX_DEPTH\n    );\n\n    const packagedMessage: IRequest<any> = {\n      header: this.createRequestHeader(),\n      body: truncatedMessage,\n    };\n\n    await this.sendPackaged(packagedMessage, options);\n  }\n\n  protected createRequestHeader(): IRequestHeader {\n    return {\n      timestamp: Date.now(),\n      requestId: uuidv4(),\n      requesterAddress: \"log-strategy\",\n      requestType: \"LOG::MESSAGE\",\n    };\n  }\n\n  static truncateAndStringify(\n    value: any,\n    depth: number = 0,\n    maxStringLength = 5000,\n    maxDepth = 10\n  ): any {\n    if (depth > maxDepth) {\n      return \"[Object depth limit exceeded]\";\n    }\n\n    if (value === undefined || value === null) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      return value.length > maxStringLength\n        ? value.substring(0, maxStringLength) + \"...\"\n        : value;\n    }\n\n    if (typeof value === \"number\" || typeof value === \"boolean\") {\n      return value;\n    }\n\n    if (value instanceof Error) {\n      return {\n        name: value.name,\n        message: this.truncateAndStringify(value.message),\n        stack: this.truncateAndStringify(value.stack),\n      };\n    }\n\n    if (this.isBufferOrArrayBufferView(value)) {\n      return `[Binary data of length ${value.byteLength}]`;\n    }\n\n    if (Array.isArray(value)) {\n      return value.map((item) => this.truncateAndStringify(item, depth + 1));\n    }\n\n    if (typeof value === \"object\") {\n      const truncatedObject: { [key: string]: any } = {};\n      for (const [key, prop] of Object.entries(value)) {\n        truncatedObject[key] = this.truncateAndStringify(prop, depth + 1);\n      }\n      return truncatedObject;\n    }\n\n    return \"[Unserializable data]\";\n  }\n\n  private static isBufferOrArrayBufferView(value: any): boolean {\n    // Check for Buffer in Node.js environment\n    if (typeof Buffer !== \"undefined\" && Buffer.isBuffer(value)) {\n      return true;\n    }\n\n    // Check for ArrayBuffer view in browser environment\n    if (ArrayBuffer.isView(value)) {\n      return true;\n    }\n\n    // Check if value is an ArrayBuffer\n    if (value instanceof ArrayBuffer) {\n      return true;\n    }\n\n    return false;\n  }\n}\n", "import { IRequest } from \"../interfaces\";\nimport { LogLevel, LogMessage, LogStrategy } from \"../logging/LogStrategy\";\n\nexport class BrowserConsoleStrategy extends LogStrategy {\n  private static readonly LOG_COLORS = {\n    [LogLevel.INFO]: \"color: blue\",\n    [LogLevel.WARN]: \"color: orange\",\n    [LogLevel.ERROR]: \"color: red\",\n    [LogLevel.DEBUG]: \"color: green\",\n  };\n\n  constructor(maxStringLength = 5000, maxDepth = 10) {\n    super();\n    this.MAX_STRING_LENGTH = maxStringLength;\n    this.MAX_DEPTH = maxDepth;\n  }\n\n  private isLogMessage(body: any): body is LogMessage {\n    return (\n      typeof body === \"object\" &&\n      body !== null &&\n      \"timestamp\" in body &&\n      \"level\" in body &&\n      \"message\" in body\n    );\n  }\n\n  protected async sendPackaged(\n    packagedMessage: IRequest<any>,\n    options?: Record<string, any>\n  ): Promise<void> {\n    const { header, body } = packagedMessage;\n    const logLevel = (options?.logLevel as LogLevel) || LogLevel.INFO;\n\n    if (this.isLogMessage(body)) {\n      this.formatLogMessage(body, header.requestId);\n    } else {\n      this.formatGenericMessage(\n        body,\n        logLevel,\n        header.timestamp,\n        header.requestId\n      );\n    }\n  }\n\n  private formatLogMessage(logMessage: LogMessage, requestId: string): void {\n    const { sender, timestamp, level, message, payload } = logMessage;\n    const logLevel = (parseInt(level) as LogLevel) || LogLevel.INFO;\n    const color = BrowserConsoleStrategy.LOG_COLORS[logLevel];\n\n    console.groupCollapsed(\n      `%c[${logLevel}] ${new Date(timestamp).toISOString()}`,\n      color\n    );\n\n    if (sender) {\n      console.log(`Sender: ${sender}`);\n    }\n    console.log(`Message: ${message}`);\n    console.log(`RequestID: ${requestId}`);\n\n    if (payload) {\n      console.log(\"Payload:\", payload);\n    }\n\n    console.groupEnd();\n  }\n\n  private formatGenericMessage(\n    message: any,\n    logLevel: LogLevel,\n    timestamp: number,\n    requestId: string\n  ): void {\n    const color = BrowserConsoleStrategy.LOG_COLORS[logLevel];\n\n    console.groupCollapsed(\n      `%c[${logLevel}] ${new Date(timestamp).toISOString()}`,\n      color\n    );\n\n    console.log(`RequestID: ${requestId}`);\n\n    if (typeof message === \"object\" && message !== null) {\n      console.log(\"Message:\", message);\n    } else {\n      console.log(`Message: ${message}`);\n    }\n\n    console.groupEnd();\n  }\n\n  async log(message: any, logLevel: LogLevel = LogLevel.INFO): Promise<void> {\n    await this.send(message, { logLevel });\n  }\n\n  async info(message: any, data?: any): Promise<void> {\n    await this.log({ message, data }, LogLevel.INFO);\n  }\n\n  async warn(message: any, data?: any): Promise<void> {\n    await this.log({ message, data }, LogLevel.WARN);\n  }\n\n  async error(message: any, data?: any): Promise<void> {\n    await this.log({ message, data }, LogLevel.ERROR);\n  }\n\n  async debug(message: any, data?: any): Promise<void> {\n    await this.log({ message, data }, LogLevel.DEBUG);\n  }\n}\n", "import EventEmitter from \"eventemitter3\";\nimport { BrowserConsoleStrategy } from \"./BrowserConsoleStrategy\";\n\nexport enum WebSocketState {\n  CONNECTING,\n  OPEN,\n  CLOSING,\n  CLOSED,\n}\n\nexport class WebSocketManager extends EventEmitter {\n  private logger: BrowserConsoleStrategy;\n  private ws!: WebSocket;\n  private url: string;\n  private secure: boolean;\n  private reconnectAttempts: number = 0;\n  private maxReconnectAttempts: number;\n  private reconnectInterval: number;\n  private state: WebSocketState = WebSocketState.CLOSED;\n  private connectionTimeout: number;\n  private connectionTimer?: number;\n\n  constructor(\n    url: string,\n    secure: boolean = false,\n    maxReconnectAttempts: number = 5,\n    reconnectInterval: number = 5000,\n    connectionTimeout: number = 10000\n  ) {\n    super();\n    this.logger = new BrowserConsoleStrategy();\n    this.url = url;\n    this.secure = secure;\n    this.maxReconnectAttempts = maxReconnectAttempts;\n    this.reconnectInterval = reconnectInterval;\n    this.connectionTimeout = connectionTimeout;\n    this.connect();\n  }\n\n  private connect() {\n    this.state = WebSocketState.CONNECTING;\n    const secureUrl = this.getSecureUrl(this.url, this.secure);\n    this.logger.info(`Attempting to connect to ${secureUrl}`);\n    this.ws = new WebSocket(secureUrl);\n    this.setHooks();\n    this.setConnectionTimeout();\n  }\n\n  private getSecureUrl(url: string, secure: boolean): string {\n    return secure ? url.replace(/^ws:/, \"wss:\") : url;\n  }\n\n  private setHooks() {\n    this.ws.onopen = () => {\n      this.clearConnectionTimeout();\n      this.state = WebSocketState.OPEN;\n      this.reconnectAttempts = 0;\n      this.logger.info(`WebSocket opened. ReadyState: ${this.ws.readyState}`);\n      this.emit(\"open\");\n    };\n    this.ws.onclose = (event) => {\n      this.clearConnectionTimeout();\n      this.state = WebSocketState.CLOSED;\n      this.logger.info(\n        `WebSocket closed. ReadyState: ${this.ws.readyState}. Code: ${event.code}, Reason: ${event.reason}`\n      );\n      this.emit(\"close\", event);\n      this.handleReconnection();\n    };\n    this.ws.onerror = (error) => {\n      this.logger.error(error);\n      this.emit(\"error\", error);\n    };\n    this.ws.onmessage = (event) => {\n      const parsedData = this.parseMessage(event.data);\n      this.emit(\"message\", parsedData);\n    };\n  }\n\n  private handleReconnection() {\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      const minDelay = 1000;\n      const delay = Math.max(\n        minDelay,\n        this.reconnectInterval * Math.pow(2, this.reconnectAttempts - 1)\n      );\n      this.logger.info(\n        `Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts}) in ${delay}ms...`\n      );\n      setTimeout(() => this.connect(), delay);\n    } else {\n      this.logger.error(\n        \"Max reconnection attempts reached. Please reconnect manually.\"\n      );\n      this.emit(\"maxReconnectAttemptsReached\");\n    }\n  }\n\n  private setConnectionTimeout() {\n    this.connectionTimer = window.setTimeout(() => {\n      if (this.state === WebSocketState.CONNECTING) {\n        this.logger.error(\"Connection attempt timed out\");\n        this.ws.close();\n      }\n    }, this.connectionTimeout);\n  }\n\n  private clearConnectionTimeout() {\n    if (this.connectionTimer) {\n      window.clearTimeout(this.connectionTimer);\n    }\n  }\n\n  private parseMessage(data: any): any {\n    try {\n      return JSON.parse(data);\n    } catch (error) {\n      return data;\n    }\n  }\n\n  public send(message: string | object) {\n    if (this.state === WebSocketState.OPEN) {\n      const data =\n        typeof message === \"string\" ? message : JSON.stringify(message);\n      this.ws.send(data);\n    } else {\n      const error = new Error(\"WebSocket is not open\");\n      this.emit(\"error\", error);\n    }\n  }\n\n  public close() {\n    this.state = WebSocketState.CLOSING;\n    this.ws.close();\n  }\n\n  public reconnect() {\n    this.logger.debug(\"Manual reconnection initiated.\");\n    this.reconnectAttempts = 0;\n    this.close();\n    this.connect();\n  }\n\n  public getState(): WebSocketState {\n    return this.state;\n  }\n\n  public getReadyState(): number {\n    return this.ws.readyState;\n  }\n}\n", "import { v4 as uuidv4 } from \"uuid\";\nimport { IRequest, IResponse, IResponseData } from \"../interfaces\";\nimport EventEmitter from \"eventemitter3\";\nimport { WebSocketManager } from \"./WebSocketManager\";\nimport { BrowserConsoleStrategy } from \"./BrowserConsoleStrategy\";\n\nexport interface RequestManagerProps {\n  webSocketManager: WebSocketManager;\n  requestTimeout?: number;\n}\n\nexport class RequestManager extends EventEmitter {\n  private logger: BrowserConsoleStrategy;\n  private pendingRequests: Map<string, (response: IResponse<any>) => void> =\n    new Map();\n  private requestTimeout: number;\n  private webSocketManager: WebSocketManager;\n  private authToken: string | undefined;\n\n  constructor(props: RequestManagerProps) {\n    super();\n    this.logger = new BrowserConsoleStrategy();\n    this.requestTimeout = props.requestTimeout || 30000;\n    this.webSocketManager = props.webSocketManager;\n    this.webSocketManager.on(\"message\", this.handleMessage.bind(this));\n  }\n\n  public async request<I, O>(\n    requestType: string,\n    body: I,\n    to?: string\n  ): Promise<IResponseData<O>> {\n    return new Promise((resolve, reject) => {\n      const request = this.createRequest<I>(requestType, body, to);\n      const timeoutId = setTimeout(() => {\n        this.pendingRequests.delete(request.header.requestId);\n        reject(new Error(\"Request timeout\"));\n      }, this.requestTimeout);\n\n      const requestCallback = (response: IResponse<O>) => {\n        clearTimeout(timeoutId);\n        this.pendingRequests.delete(request.header.requestId);\n        if (response.body.success) {\n          resolve(response.body);\n        } else {\n          reject(response.body.error || response.body.data);\n        }\n      };\n\n      this.pendingRequests.set(request.header.requestId, requestCallback);\n      this.webSocketManager.send(JSON.stringify(request));\n    });\n  }\n\n  private createRequest<T>(\n    requestType: string,\n    body: T,\n    to?: string\n  ): IRequest<T> {\n    return {\n      header: {\n        timestamp: Date.now(),\n        requestId: `RM-${uuidv4()}`,\n        requesterAddress: \"RequestManager\",\n        recipientAddress: to,\n        requestType,\n        authToken: this.authToken,\n      },\n      body,\n    };\n  }\n\n  private handleMessage(parsed: any) {\n    try {\n      if (parsed.header && parsed.header.requestType) {\n        this.handleIncomingRequest(parsed);\n      } else if (parsed.requestHeader) {\n        this.handleResponse(parsed);\n      } else {\n        this.logger.warn(\"Received message with unknown structure:\", parsed);\n      }\n    } catch (error) {\n      this.logger.error(\"Error parsing message:\", error);\n    }\n  }\n\n  private handleIncomingRequest(request: IRequest<any>) {\n    const { requestType } = request.header;\n    if (requestType && this.listenerCount(requestType) > 0) {\n      this.emit(requestType, request.body, (responseBody: any) => {\n        const response: IResponse<any> = {\n          requestHeader: request.header,\n          responseHeader: {\n            responderAddress: \"RequestManager\",\n            timestamp: Date.now(),\n          },\n          body: {\n            data: responseBody,\n            success: true,\n            error: null,\n          },\n        };\n        this.webSocketManager.send(JSON.stringify(response));\n      });\n    } else {\n      this.logger.warn(\n        `No handlers registered for requestType: ${requestType}`\n      );\n    }\n  }\n\n  private handleResponse<T>(response: IResponse<T>) {\n    const pendingRequest = this.pendingRequests.get(\n      response.requestHeader.requestId\n    );\n    if (pendingRequest) {\n      pendingRequest(response);\n      this.pendingRequests.delete(response.requestHeader.requestId);\n    }\n  }\n\n  public setAuthToken(token: string) {\n    this.authToken = token;\n  }\n\n  public clearAuthToken() {\n    this.authToken = undefined;\n  }\n}\n", "import EventEmitter from \"eventemitter3\";\nimport { WebSocketManager } from \"./WebSocketManager\";\nimport { BrowserConsoleStrategy } from \"./BrowserConsoleStrategy\";\nimport { RequestManager } from \"./RequestManager\";\nimport { IResponseData } from \"../interfaces\";\n\nexport interface ICommunicationsManagerConfig {\n  url: string;\n  secure?: boolean;\n  authToken?: string;\n  maxReconnectAttempts?: number;\n  reconnectInterval?: number;\n  heartbeatInterval?: number;\n  requestTimeout?: number;\n}\n\nexport class CommunicationsManager extends EventEmitter {\n  private webSocketManager: WebSocketManager;\n  private requestManager: RequestManager;\n  private logger = new BrowserConsoleStrategy();\n\n  constructor(config: ICommunicationsManagerConfig) {\n    super();\n    this.validateConfig(config);\n\n    try {\n      this.webSocketManager = new WebSocketManager(\n        config.url,\n        config.secure,\n        config.maxReconnectAttempts,\n        config.reconnectInterval\n      );\n\n      this.requestManager = new RequestManager({\n        webSocketManager: this.webSocketManager,\n        requestTimeout: config.requestTimeout,\n      });\n\n      this.setupWebSocketHooks();\n    } catch (error) {\n      this.logger.error(\"Error initializing CommunicationsManager\", { error });\n      throw new Error(\"Failed to initialize CommunicationsManager\");\n    }\n  }\n\n  private setupWebSocketHooks() {\n    this.webSocketManager.on(\n      \"maxReconnectAttemptsReached\",\n      this.handleMaxReconnectAttemptsReached.bind(this)\n    );\n  }\n\n  public onOpen(callback: () => void) {\n    this.logger.info(\"onOpen callback registered\");\n    this.webSocketManager.on(\"open\", callback);\n  }\n\n  public onClose(callback: (event: CloseEvent) => void) {\n    this.logger.info(\"onClose callback registered\");\n    this.webSocketManager.on(\"close\", callback);\n  }\n\n  public onError(callback: (error: Event) => void) {\n    this.logger.info(\"onError callback registered\");\n    this.webSocketManager.on(\"error\", callback);\n  }\n\n  public onMessage(callback: (data: string) => void) {\n    this.logger.info(\"onMessage callback registered\");\n    this.webSocketManager.on(\"message\", callback);\n  }\n\n  private handleMaxReconnectAttemptsReached() {\n    this.logger.error(\n      \"Maximum reconnection attempts reached. To try again, please refresh the page.\"\n    );\n  }\n\n  private validateConfig(config: ICommunicationsManagerConfig): void {\n    if (!config.url) {\n      throw new Error(\"URL is required in the configuration\");\n    }\n  }\n\n  public async request<I, O>(\n    requestType: string,\n    body: I,\n    to?: string\n  ): Promise<IResponseData<O>> {\n    try {\n      return this.requestManager.request(requestType, body, to);\n    } catch (error) {\n      this.logger.error(\"Error making request\", { requestType, error });\n      throw error;\n    }\n  }\n\n  public registerMessageHandler(\n    messageType: string,\n    handler: (data: any) => void\n  ) {\n    this.requestManager.on(messageType, handler);\n  }\n}\n"],
  "mappings": "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",
  "names": ["EventEmitter", "EventEmitter", "WebSocketState"]
}
